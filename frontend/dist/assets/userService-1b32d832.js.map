{"version":3,"file":"userService-1b32d832.js","sources":["../../src/services/userService.ts"],"sourcesContent":["import api, { ApiResponse, User } from './api';\r\n\r\nexport interface CreateUserData {\r\n  firstName: string;\r\n  lastName: string;\r\n  email: string;\r\n  password: string;\r\n  role: 'user' | 'admin' | 'moderator';\r\n}\r\n\r\nexport interface UpdateUserData {\r\n  firstName?: string;\r\n  lastName?: string;\r\n  email?: string;\r\n  password?: string;\r\n  role?: string;\r\n  isActive?: boolean;\r\n}\r\n\r\nexport interface UsersQueryParams {\r\n  page?: number;\r\n  limit?: number;\r\n  search?: string;\r\n  role?: string;\r\n}\r\n\r\nexport interface UsersResponse {\r\n  users: User[];\r\n  meta: {\r\n    page: number;\r\n    limit: number;\r\n    total: number;\r\n    totalPages: number;\r\n  };\r\n}\r\n\r\nclass UserService {\r\n  // Get all users with filtering and pagination\r\n  async getUsers(params: UsersQueryParams = {}): Promise<UsersResponse> {\r\n    try {\r\n      const queryParams = new URLSearchParams();\r\n      \r\n      if (params.page) queryParams.append('page', params.page.toString());\r\n      if (params.limit) queryParams.append('limit', params.limit.toString());\r\n      if (params.search) queryParams.append('search', params.search);\r\n      if (params.role) queryParams.append('role', params.role);\r\n\r\n      const response = await api.get<ApiResponse<User[]>>(`/users?${queryParams.toString()}`);\r\n      \r\n      if (response.data.success && response.data.data) {\r\n        return {\r\n          users: response.data.data,\r\n          meta: {\r\n            page: response.data.meta?.page || params.page || 1,\r\n            limit: response.data.meta?.limit || params.limit || 20,\r\n            total: response.data.meta?.total || response.data.data.length,\r\n            totalPages: response.data.meta?.totalPages || 1\r\n          }\r\n        };\r\n      } else {\r\n        throw new Error(response.data.message || 'Failed to fetch users');\r\n      }\r\n    } catch (error: any) {\r\n      const message = error.response?.data?.message || error.message || 'Failed to fetch users';\r\n      throw new Error(message);\r\n    }\r\n  }\r\n\r\n  // Create new user (Admin only)\r\n  async createUser(userData: CreateUserData): Promise<User> {\r\n    try {\r\n      const response = await api.post<ApiResponse<User>>('/users/create', userData);\r\n      \r\n      if (response.data.success && response.data.data) {\r\n        return response.data.data;\r\n      } else {\r\n        throw new Error(response.data.message || 'Failed to create user');\r\n      }\r\n    } catch (error: any) {\r\n      const message = error.response?.data?.message || error.message || 'Failed to create user';\r\n      throw new Error(message);\r\n    }\r\n  }\r\n\r\n  // Get user by ID\r\n  async getUserById(id: string): Promise<User> {\r\n    try {\r\n      const response = await api.get<ApiResponse<User>>(`/users/${id}`);\r\n      \r\n      if (response.data.success && response.data.data) {\r\n        return response.data.data;\r\n      } else {\r\n        throw new Error(response.data.message || 'Failed to fetch user');\r\n      }\r\n    } catch (error: any) {\r\n      const message = error.response?.data?.message || error.message || 'Failed to fetch user';\r\n      throw new Error(message);\r\n    }\r\n  }\r\n\r\n  // Update user\r\n  async updateUser(id: string, userData: UpdateUserData): Promise<User> {\r\n    try {\r\n      const response = await api.put<ApiResponse<User>>(`/users/${id}`, userData);\r\n      \r\n      if (response.data.success && response.data.data) {\r\n        return response.data.data;\r\n      } else {\r\n        throw new Error(response.data.message || 'Failed to update user');\r\n      }\r\n    } catch (error: any) {\r\n      const message = error.response?.data?.message || error.message || 'Failed to update user';\r\n      throw new Error(message);\r\n    }\r\n  }\r\n\r\n  // Delete user (Admin only)\r\n  async deleteUser(id: string): Promise<void> {\r\n    try {\r\n      const response = await api.delete<ApiResponse>(`/users/${id}`);\r\n      \r\n      if (!response.data.success) {\r\n        throw new Error(response.data.message || 'Failed to delete user');\r\n      }\r\n    } catch (error: any) {\r\n      const message = error.response?.data?.message || error.message || 'Failed to delete user';\r\n      throw new Error(message);\r\n    }\r\n  }\r\n}\r\n\r\n// Export singleton instance\r\nexport const userService = new UserService();\r\nexport default userService; "],"names":["UserService","params","queryParams","response","api","_a","_b","_c","_d","error","message","_f","_e","userData","id","userService"],"mappings":"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"}